# Workflow for building and deploying a Next.js site to GitHub Pages
name: Deploy Next.js Site

on:
  # Runs on pushes targeting the default branch (main or master)
  push:
    branches: ["main"] # Or "master", depending on your default branch name

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Use latest major version

      - name: Detect Package Manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=pnpm" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx" >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Setup Node
        uses: actions/setup-node@v4 # Use latest major version
        with:
          node-version: "20" # Specify your Node.js version
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v5 # Use latest major version

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
        # Ensure your next.config.js has "output: 'export'"
        # If your site is served from a subpath (e.g., username.github.io/repo),
        # ensure basePath is set in next.config.js and potentially assetPrefix.

      # Optionally add linting or testing steps here
      # - name: Run linter
      #   run: ${{ steps.detect-package-manager.outputs.runner }} lint
      #
      # - name: Run tests
      #   run: ${{ steps.detect-package-manager.outputs.runner }} test

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Use latest major version
        with:
          # Upload the output directory from the Next.js static export
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Runs only after the build job succeeds
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Use latest major version
